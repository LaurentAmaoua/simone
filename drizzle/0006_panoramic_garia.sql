CREATE TABLE IF NOT EXISTS "planicamping_account" (
	"user_id" varchar(255) NOT NULL,
	"type" varchar(255) NOT NULL,
	"provider" varchar(255) NOT NULL,
	"provider_account_id" varchar(255) NOT NULL,
	"refresh_token" text,
	"access_token" text,
	"expires_at" integer,
	"token_type" varchar(255),
	"scope" varchar(255),
	"id_token" text,
	"session_state" varchar(255),
	CONSTRAINT "planicamping_account_provider_provider_account_id_pk" PRIMARY KEY("provider","provider_account_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "planicamping_campsite_activity" (
	"ID" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "planicamping_campsite_activity_ID_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"Title" varchar(256) NOT NULL,
	"infos_description" text NOT NULL,
	"Campings" varchar(255) NOT NULL,
	"Contenu_date" timestamp NOT NULL,
	"Contenu_time" varchar(10),
	"useful_duration" varchar(50),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "planicamping_session" (
	"session_token" varchar(255) PRIMARY KEY NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "planicamping_user" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"name" varchar(255),
	"email" varchar(255) NOT NULL,
	"email_verified" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"image" varchar(255)
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "planicamping_verification_token" (
	"identifier" varchar(255) NOT NULL,
	"token" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL,
	CONSTRAINT "planicamping_verification_token_identifier_token_pk" PRIMARY KEY("identifier","token")
);
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "planicamping_account" ADD CONSTRAINT "planicamping_account_user_id_planicamping_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."planicamping_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "planicamping_session" ADD CONSTRAINT "planicamping_session_user_id_planicamping_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."planicamping_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "account_user_id_idx" ON "planicamping_account" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "title_idx" ON "planicamping_campsite_activity" USING btree ("Title");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "session_user_id_idx" ON "planicamping_session" USING btree ("user_id");

-- Copy data from old table to new table if it exists
DO $$ 
BEGIN
    IF EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'planicamping_activity') THEN
        INSERT INTO "planicamping_campsite_activity" ("ID", "Title", "infos_description", "Campings", "Contenu_date", "created_at", "updated_at")
        SELECT "id", "name", "description", "located_at", "start_date", "created_at", "updated_at"
        FROM "planicamping_activity";
        
        DROP TABLE "planicamping_activity";
    END IF;
END $$;
--> statement-breakpoint